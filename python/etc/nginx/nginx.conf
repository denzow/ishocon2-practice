user www-data;
worker_processes auto;
worker_cpu_affinity auto;
pid /run/nginx.pid;

events {
  worker_connections 256;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  #access_log  off;
  sendfile    on;
  tcp_nopush  on;
  tcp_nodelay on;
  server_names_hash_max_size 1024;
  open_file_cache max=200000 inactive=20s;

  proxy_buffers 4 32k;
  proxy_busy_buffers_size 64k;

  gzip on;
  #access_log /var/log/nginx/access.log;
  #error_log /var/log/nginx/error.log;

  server {
    listen 443 ssl http2;
    ssl on;
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_buffer_size 4k;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    location ~ ^/(css|images)/ {
      open_file_cache max=100 inactive=60s;
      root /home/ishocon/webapp/python/public;
    }

    location / {
        include uwsgi_params;
        uwsgi_pass unix:///tmp/uwsgi.sock;
    }

  }
}



# HTTPS server
#
#server {
#        listen 443;
#        server_name localhost;
#
#        root html;
#        index index.html index.htm;
#
#        ssl on;
#        ssl_certificate cert.pem;
#        ssl_certificate_key cert.key;
#
#        ssl_session_timeout 5m;
#
#        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#        ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#        ssl_prefer_server_ciphers on;
#
#        location / {
#          try_files $uri $uri/ =404;
#        }
#}
