 file_name  line  avg_per_time   hits  total_time       graph                                                                                                         code
----------  ----  ------------  -----  ----------  ----------  -----------------------------------------------------------------------------------------------------------
./myapp.py    52             0      0           0              def db():
./myapp.py    53        27.632   4977      137526                  if hasattr(request, 'db'):
./myapp.py    54        24.391    845       20610                      return request.db
./myapp.py    55             0      0           0                  else:
./myapp.py    56        23.068   4132       95315                      request.db = DB_POOL.pop()
./myapp.py    57        21.824   4132       90177                      return request.db
./myapp.py    60             0      0           0              @app.teardown_request
./myapp.py    61             0      0           0              def teardown(exception=None):
./myapp.py    62        28.473   4845      137953                  if hasattr(request, 'db'):
./myapp.py    63        24.264   4131      100235                      DB_POOL.append(request.db)
./myapp.py    64        23.513   4131       97134                      delattr(request, 'db')
./myapp.py    67             0      0           0              def get_election_results():
./myapp.py    68        97.515    482       47002                  cur = db().cursor()
./myapp.py    69         0.687    482         331                  cur.execute("""
./myapp.py    70             0      0           0              SELECT c.id, c.name, c.political_party, c.sex, v.count
./myapp.py    71             0      0           0              FROM candidates AS c
./myapp.py    72             0      0           0              LEFT OUTER JOIN
./myapp.py    73             0      0           0                (SELECT candidate_id, sum(vote_count) AS count
./myapp.py    74             0      0           0                FROM votes
./myapp.py    75             0      0           0                GROUP BY candidate_id) AS v
./myapp.py    76             0      0           0              ON c.id = v.candidate_id
./myapp.py    77             0      0           0              ORDER BY v.count DESC
./myapp.py    78      2469.494    482     1190296  *           """)
./myapp.py    79        12.857    482        6197                  return cur.fetchall()
./myapp.py    82             0      0           0              def get_voice_of_supporter(candidate_ids):
./myapp.py    83        93.953    363       34105                  cur = db().cursor()
./myapp.py    84         3.172   1900        6026                  candidate_ids_str = ','.join([str(cid) for cid in candidate_ids])
./myapp.py    85         1.077    363         391                  cur.execute("""
./myapp.py    86             0      0           0              SELECT keyword
./myapp.py    87             0      0           0              FROM votes
./myapp.py    88             0      0           0              WHERE candidate_id IN ({})
./myapp.py    89             0      0           0              GROUP BY keyword
./myapp.py    90             0      0           0              ORDER BY sum(vote_count) DESC
./myapp.py    91             0      0           0              LIMIT 10
./myapp.py    92      5086.595    363     1846434  **          """.format(candidate_ids_str))
./myapp.py    93        12.592    363        4571                  records = cur.fetchall()
./myapp.py    94         2.016   4171        8410                  return [r['keyword'] for r in records]
./myapp.py    95             0      0           0
./myapp.py    96             0      0           0
./myapp.py    97             0      0           0              def get_all_party_name():
./myapp.py    98        81.848    361       29547                  cur = db().cursor()
./myapp.py    99       352.468    361      127241                  cur.execute('SELECT political_party FROM candidates GROUP BY political_party')
./myapp.py   100        11.845    361        4276                  records = cur.fetchall()
./myapp.py   101         2.324   2166        5033                  return [r['political_party'] for r in records]
./myapp.py   102             0      0           0
./myapp.py   103             0      0           0
./myapp.py   104             0      0           0              get_candidate_by_id(candidate_id):
./myapp.py   105             0      0           0              cur = db().cursor()
./myapp.py   106             0      0           0              cur.execute('SELECT * FROM candidates WHERE id = {}'.format(candidate_id))
./myapp.py   107             0      0           0              return cur.fetchone()
./myapp.py   110             0      0           0              def db_initialize():
./myapp.py   111         118.0      1         118                  cur = db().cursor()
./myapp.py   112         394.0      1         394                  cur.execute('DELETE FROM votes')
./myapp.py   115             0      0           0              @app.route('/')
./myapp.py   116             0      0           0              def get_index():
./myapp.py   117          0.82    361         296                  candidates = []
./myapp.py   118      2660.803    361      960550  *               election_results = get_election_results()
./myapp.py   119             0      0           0                  # 上位10人と最下位のみ表示
./myapp.py   120         2.177    361         786                  candidates += election_results[:10]
./myapp.py   121          1.15    361         415                  candidates.append(election_results[-1])
./myapp.py   122             0      0           0
./myapp.py   123       466.022    361      168234                  parties_name = get_all_party_name()
./myapp.py   124           0.9    361         325                  parties = {}
./myapp.py   125         0.792   1805        1430                  for name in parties_name:
./myapp.py   126         0.854   1444        1233                      parties[name] = 0
./myapp.py   127         0.721  11191        8072                  for r in election_results:
./myapp.py   128         1.216  10830       13166                      parties[r['political_party']] += r['count'] or 0
./myapp.py   129         3.901   1805        7042                  parties = sorted(parties.items(), key=lambda x: x[1], reverse=True)
./myapp.py   130             0      0           0
./myapp.py   131         1.136    361         410                  sex_ratio = {'men': 0, 'women': 0}
./myapp.py   132         0.741  11191        8288                  for r in election_results:
./myapp.py   133         0.828  10830        8965                      if r['sex'] == '男':
./myapp.py   134         0.974   4332        4219                          sex_ratio['men'] += r['count'] or 0
./myapp.py   135         0.816   6498        5300                      elif r['sex'] == '女':
./myapp.py   136         0.992   6498        6444                          sex_ratio['women'] += r['count'] or 0
./myapp.py   137             0      0           0
./myapp.py   138         0.917    361         331                  return render_template('index.html',
./myapp.py   139          0.74    361         267                                         candidates=candidates,
./myapp.py   140         0.698    361         252                                         parties=parties,
./myapp.py   141      3202.817    361     1156217  *                                      sex_ratio=sex_ratio)
./myapp.py   144             0      0           0              @app.route('/candidates/<int:candidate_id>')
./myapp.py   145             0      0           0              def get_candidate(candidate_id):
./myapp.py   146       103.579    242       25066                  cur = db().cursor()
./myapp.py   147       342.025    242       82770                  cur.execute('SELECT * FROM candidates WHERE id = {}'.format(candidate_id))
./myapp.py   148        14.343    242        3471                  candidate = cur.fetchone()
./myapp.py   149         0.674    242         163                  if not candidate:
./myapp.py   150             0      0           0                      return redirect('/')
./myapp.py   151             0      0           0
./myapp.py   152        824.43    242      199512                  cur.execute('SELECT sum(vote_count) AS count FROM votes WHERE candidate_id = {}'.format(candidate_id))
./myapp.py   153        15.256    242        3692                  votes = cur.fetchone()['count']
./myapp.py   154      2751.888    242      665957  *               keywords = get_voice_of_supporter([candidate_id])
./myapp.py   155         0.756    242         183                  return render_template('candidate.html',
./myapp.py   156         0.624    242         151                                         candidate=candidate,
./myapp.py   157         0.574    242         139                                         votes=votes,
./myapp.py   158       880.463    242      213072                                         keywords=keywords)
./myapp.py   161             0      0           0              @app.route('/political_parties/<string:name>')
./myapp.py   162             0      0           0              def get_political_party(name):
./myapp.py   163       102.074    121       12351                  cur = db().cursor()
./myapp.py   164         0.843    121         102                  votes = 0
./myapp.py   165        77.246   3751      289750                  for r in get_election_results():
./myapp.py   166         0.713   3630        2587                      if r['political_party'] == name:
./myapp.py   167         1.034    932         964                          votes += r['count'] or 0
./myapp.py   168             0      0           0
./myapp.py   169       375.752    121       45466                  cur.execute('SELECT * FROM candidates WHERE political_party = "{}"'.format(name))
./myapp.py   170        11.826    121        1431                  candidates = cur.fetchall()
./myapp.py   171         2.047   1174        2403                  candidate_ids = [c['id'] for c in candidates]
./myapp.py   172     10215.529    121     1236079  *               keywords = get_voice_of_supporter(candidate_ids)
./myapp.py   173         0.793    121          96                  return render_template('political_party.html',
./myapp.py   174         0.678    121          82                                         political_party=name,
./myapp.py   175         0.686    121          83                                         votes=votes,
./myapp.py   176         0.678    121          82                                         candidates=candidates,
./myapp.py   177      1007.876    121      121953                                         keywords=keywords)
./myapp.py   178             0      0           0
./myapp.py   179             0      0           0
./myapp.py   180             0      0           0              .route('/vote')
./myapp.py   181             0      0           0              get_vote():
./myapp.py   182             0      0           0              cur = db().cursor()
./myapp.py   183             0      0           0              cur.execute('SELECT * FROM candidates')
./myapp.py   184             0      0           0              candidates = cur.fetchall()
./myapp.py   185             0      0           0              return render_template('vote.html',
./myapp.py   186             0      0           0                                     candidates=candidates,
./myapp.py   187             0      0           0                                     message='')
./myapp.py   190             0      0           0              @app.route('/vote', methods=['POST'])
./myapp.py   191             0      0           0              def post_vote():
./myapp.py   192       104.314   3407      355397                  cur = db().cursor()
./myapp.py   193         1.222   3407        4165                  cur.execute('SELECT * FROM users WHERE name = "{}" AND address = "{}" AND mynumber = "{}"'.format(
./myapp.py   194      3491.542   3407    11895682  !*********          request.form['name'], request.form['address'], request.form['mynumber']
./myapp.py   195             0      0           0                  ))
./myapp.py   196        14.774   3407       50335                  user = cur.fetchone()
./myapp.py   197       411.044   3407     1400428  *               cur.execute('SELECT * FROM candidates WHERE name = "{}"'.format(request.form['candidate']))
./myapp.py   198        14.394   3407       49039                  candidate = cur.fetchone()
./myapp.py   199         0.784   3407        2670                  voted_count = 0
./myapp.py   200         0.829   3407        2824                  if user:
./myapp.py   201        537.35   2754     1479862  *                   cur.execute('SELECT sum(vote_count) AS count FROM votes WHERE user_id = %s', (user['id'],))
./myapp.py   202        16.084   2754       44294                      voted_count = cur.fetchone()['count']
./myapp.py   203         0.889   2754        2448                      if not voted_count:
./myapp.py   204         0.883   2749        2428                          voted_count = 0
./myapp.py   205             0      0           0
./myapp.py   206       720.841   3407     2455905  **              cur.execute('SELECT * FROM candidates')
./myapp.py   207        15.895   3407       54153                  candidates = cur.fetchall()
./myapp.py   208         0.949   3407        3234                  if not user:
./myapp.py   209      2207.536    653     1441521  *                   return render_template('vote.html', candidates=candidates, message='個人情報に誤りがあります')
./myapp.py   210        62.453   2754      171996                  elif user['votes'] < (int(request.form['vote_count']) + voted_count):
./myapp.py   211        2047.5      2        4095                      return render_template('vote.html', candidates=candidates, message='投票数が上限を超えています')
./myapp.py   212        50.854   2752      139949                  elif not request.form['candidate']:
./myapp.py   213        1618.0      1        1618                      return render_template('vote.html', candidates=candidates, message='候補者を記入してください')
./myapp.py   214          0.99   2751        2724                  elif not candidate:
./myapp.py   215        1658.0      1        1658                      return render_template('vote.html', candidates=candidates, message='候補者を正しく記入してください')
./myapp.py   216        49.357   2750      135732                  elif not request.form['keyword']:
./myapp.py   217        1664.0      1        1664                      return render_template('vote.html', candidates=candidates, message='投票理由を記入してください')
./myapp.py   218             0      0           0
./myapp.py   219         1.187   2749        3263                  cur.execute('INSERT INTO votes (user_id, candidate_id, keyword, vote_count) VALUES (%s, %s, %s, %s)', (
./myapp.py   220      2120.185   2749     5828389  *****               user['id'], candidate['id'], request.form['keyword'], int(request.form['vote_count'])
./myapp.py   221             0      0           0                  ))
./myapp.py   222      1797.015   2749     4939995  ****            return render_template('vote.html', candidates=candidates, message='投票に成功しました')
./myapp.py   225             0      0           0              @app.route('/initialize')
./myapp.py   226             0      0           0              def get_initialize():
./myapp.py   227         519.0      1         519                  db_initialize()
./myapp.py   228             0      1           0                  return ''
